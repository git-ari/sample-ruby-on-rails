{
  "openapi": "3.0.0",
  "info": {
    "title": "Blog API",
    "description": "Sample Ruby On Rails",
    "version": "v1"
  },
  "paths": {
    "/posts": {
      "post": {
        "summary": "Creates a post",
        "tags": [
          "Posts"
        ],
        "description": "Creates a new post",
        "operationId": "createPost",
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Post created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/post"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/errors_object"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/post"
              }
            }
          }
        }
      },
      "get": {
        "summary": "Searches posts",
        "tags": [
          "Posts"
        ],
        "description": "Searches posts by keywords",
        "operationId": "searchPosts",
        "responses": {
          "406": {
            "description": "Unsupported Accept Header",
            "content": {
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a post",
        "tags": [
          "Posts"
        ],
        "description": "Retrieves a specific post by id",
        "operationId": "getPost",
        "responses": {
          "200": {
            "description": "post found",
            "examples": {
              "application/json": {
                "id": 1,
                "title": "Hello world!",
                "content": "Hello world and hello universe. Thank you all very much!!!",
                "thumbnail": "thumbnail.png"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/post"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "Updates a post",
        "tags": [
          "Posts"
        ],
        "description": "Updates a specific post by id",
        "operationId": "updatePost",
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "Post updated",
            "content": {
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "content"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a post",
        "tags": [
          "Posts"
        ],
        "description": "Deletes a specific post by id",
        "operationId": "deletePost",
        "responses": {
          "204": {
            "description": "Post deleted",
            "content": {
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
            }
          }
        }
      }
    },
    "/posts/{id}/upload": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "put": {
        "summary": "Uploads a post thumbnail",
        "tags": [
          "Posts"
        ],
        "description": "Upload a thumbnail for specific post by id",
        "operationId": "uploadThumbnailPost",
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "post updated",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "image/png": {
              "schema": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/comments": {
      "post": {
        "summary": "Creates a comment",
        "tags": [
          "Comments"
        ],
        "description": "Creates a new comment from provided data",
        "operationId": "createComment",
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "post created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/comment"
                }
              }
            }
          },
          "422": {
            "description": "invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/errors_object"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/post"
              }
            }
          }
        }
      },
      "get": {
        "summary": "Returns all comments",
        "tags": [
          "Comments"
        ],
        "description": "Returns all comments",
        "operationId": "getComments",
        "responses": {
          "406": {
            "description": "Unsupported Accept Header",
            "content": {
            }
          }
        }
      }
    },
    "/comments/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a comment",
        "tags": [
          "Comments"
        ],
        "description": "Retrieves a specific post by id",
        "operationId": "getComment",
        "responses": {
          "200": {
            "description": "comment found",
            "examples": {
              "application/json": {
                "post_id": 1,
                "body": "Hello world and hello universe. Thank you all very much!!!"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/comment"
                }
              }
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
            }
          }
        }
      },
      "put": {
        "summary": "Updates a comment",
        "tags": [
          "Comments"
        ],
        "description": "Updates a specific comment by id",
        "operationId": "updateComment",
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "Comment updated",
            "content": {
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "string"
                  }
                },
                "required": [
                  "body"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a comment",
        "tags": [
          "Comments"
        ],
        "description": "Deletes a specific comment by id",
        "operationId": "deleteComment",
        "responses": {
          "204": {
            "description": "Comment deleted",
            "examples": {
              "application/json": {
                "body": "Hello world and hello universe. Thank you all very much!!!",
                "post_id": 1
              }
            },
            "content": {
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
            }
          }
        }
      }
    },
    "/comments/post/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieves the comments by post",
        "tags": [
          "Comments"
        ],
        "description": "Retrieves the comments of a specific post by id",
        "operationId": "show_by_post",
        "responses": {
          "200": {
            "description": "Comments found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/comment"
                }
              }
            }
          }
        }
      }
    },
    "/triangles/{a}/{b}/{c}": {
      "parameters": [
        {
          "name": "a",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "b",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "c",
          "in": "path",
          "required": true,
          "schema": {
            "type": "stringF"
          }
        }
      ],
      "get": {
        "summary": "Determinates type of triangle",
        "tags": [
          "Triangles"
        ],
        "description": "Determinates what type of triangle it is",
        "operationId": "determineType",
        "responses": {
          "200": {
            "description": "Triangle Type Found",
            "examples": {
              "application/json": {
                "result": "Scalene / Equilateral / Isosceles / Incorrect"
              }
            },
            "content": {
            }
          }
        }
      }
    }
  },
  "definitions": {
    "errors_object": {
      "type": "object",
      "properties": {
        "errors": {
          "$ref": "#/definitions/errors_map"
        }
      }
    },
    "errors_map": {
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string",
          "nullable": true
        }
      },
      "required": [
        "id",
        "title",
        "content"
      ]
    },
    "comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "body": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "body"
      ]
    }
  }
}